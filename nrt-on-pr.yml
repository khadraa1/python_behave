name: Non-Regression-Test on PR

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Add domain name loopback
        run: sudo echo "127.0.0.1 ps.moodysanalytics.net" | sudo tee -a /etc/hosts

      - name: Install dependencies
        run: npm run ci

      - name: Check ESLint rules
        run: npm run lint

      - name: Build & Launch server
        run: npm run serve:ci

      - name: Install Playwright
        run: npm run test:install

      - name: Run NRT
        id: nrt
        run: npm run test:dev
        continue-on-error: true

      - name: Exit early if NRT didn't produce a result
        if: steps.nrt.outputs.success == ''
        run: exit 1

      - name: Setup environment variables
        run: |
          DATE=$(date -u -d 'today' +'%Y-%m-%d-%H-%M-%S')
          TARGET=${{github.event.number}}
          TOTAL=${{steps.nrt.outputs.total}}
          PASSED=${{steps.nrt.outputs.passed}}
          FAILED=${{steps.nrt.outputs.failed}}
          SKIPPED=${{steps.nrt.outputs.skipped}}
          DURATION="${{steps.nrt.outputs.duration}}"
          echo "DATE=$DATE" >> $GITHUB_ENV
          echo "REPORT=$DATE.$TARGET.$PASSED.$FAILED.$SKIPPED" >> $GITHUB_ENV
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
          echo "DURATION=$DURATION" >> $GITHUB_ENV
          if ${{ steps.nrt.outputs.success }}
          then
            echo "RESULT=Succeded :heavy_check_mark:" >> $GITHUB_ENV
          else
            echo "RESULT=Failed :x:" >> $GITHUB_ENV
          fi

      - name: Commit files generated by the NRT (snapshots)
        run: |
          git config user.email ""
          git config user.name "NRT-Bot"
          # If new files are present, commit them
          if [[ $(git status --porcelain) ]]; then
            git add -A
            git commit -m "Generated by NRT" -m "[skip ci]"
            git push
          fi

      - name: Deploy results to GitHub Pages
        run: |
          # Rename/move report
          mv playwright-report ../$REPORT

          # Backup latest reporting interface
          cp tests/index.html ..

          # Setup gh-pages repository
          if [[ -z $(git ls-remote --heads origin gh-pages) ]]; then
            git checkout --orphan gh-pages
            git rm -rf .
            echo "GH_PAGES=1" >> $GITHUB_ENV
          else
            git fetch
            git checkout gh-pages
          fi

          # Move report back into repo
          mv ../$REPORT ./

          # Restore latest reporting interface
          mv ../index.html ./

          # Add new report to reports.json
          if [[ ! -f reports.json ]]; then
            # If reports.json doesn't exist, create it with the new report
            printf "[\"$REPORT\"]" > reports.json
          else
            # Otherwise, append it
            sed -i "s/\]/, \"$REPORT\"\]/" reports.json
          fi

          # Commit files
          git config user.email ""
          git config user.name "NRT-Bot"
          git add index.html
          git add reports.json
          git add $REPORT
          git commit -m "Add NRT report $REPORT" -m "[skip ci]"
          git push

      # - name: Activate GitHub Pages
      #   if: ${{ env.GH_PAGES == 1 }}
      #   uses: actions/github-script@v5
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       try {
      #         await github.rest.repos.createPagesSite({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           source: {
      #             branch: 'gh-pages',
      #             path: '/'
      #           }
      #         })
      #       } catch (err) {
      #         echo err
      #       }

      - name: Post test results link
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':performing_arts: Non-Regression-Test ${{ env.RESULT }}\n\n\
              Ran ${{ env.TOTAL }} tests - ${{ env.PASSED }} passed, ${{ env.FAILED }} failed, ${{ env.SKIPPED }} skipped\n\n\
              Date: ${{ env.DATE }}\n\n\
              Duration: ${{ env.DURATION }}\n\n\
              [View report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/#${{ env.REPORT }})'
            })

      - name: Exit if NRT failed
        if: steps.nrt.outputs.success == 'false'
        run: exit 1
